plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "io.freefair.lombok" version '8.11'
	id("com.gradleup.shadow") version "8.3.5"
	id 'com.google.cloud.tools.jib' version '3.4.4'
}


group = 'com.tmv'
version = '0.0.5.1-SNAPSHOT'


jib {
	from {
		image = 'azul/zulu-openjdk:23-latest'
		platforms {
			platform {
				architecture = 'arm64'
				os = 'linux'
			}
		}
	}


	to {
		image = 'thkrebs/my-track'
		tags = ["${version}", 'latest']
		credHelper = 'osxkeychain'
	}

	container {
		environment = ['DB_HOST': 'postgres', 'DB_PORT': '5432', 'DB_USER': 'postgres', 'DB_PWD': 'some', 'spring.profiles.active':'prod']
		//jvmFlags = ['-Xms512m', '-Xdebug']
		mainClass = 'com.tmv.ingest.TcpServerApplication'
		ports = ['8080', '8443', '5677']
		//labels = [key1:'value1', key2:'value2']
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	testImplementation 'org.springframework.security:spring-security-test'
	modules {
			module("org.springframework.boot:spring-boot-starter-logging") {
				replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
		}
	}
	implementation 'org.hibernate.orm:hibernate-spatial:6.4.1.Final'
	implementation 'org.locationtech.jts:jts:1.20.0'
	implementation("org.n52.jackson:jackson-datatype-jts:1.2.10")
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.apache.httpcomponents.core5:httpcore5:5.2'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
	implementation 'com.google.code.gson:gson:2.12.1'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	testCompileOnly 'org.projectlombok:lombok:1.18.36'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
	testImplementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

}

bootBuildImage {
	imageName = "docker.io/thkrebs/my-track"
}

test {
	systemProperties = ['spring.profiles.active': 'dev'] //
	useJUnitPlatform()
	beforeTest { descriptor ->
		logger.lifecycle("Running test: ${descriptor}")
	}
}
/*
tasks.named('test') {
	useJUnitPlatform()
	test.systemProperty 'spring.profiles.active', 'dev'
}
*/
gradle.taskGraph.whenReady { taskGraph ->
	println "Welcome to the build system. Starting build process..."
}

// there is probably a better way instead of having two statements
tasks.matching { it.name.startsWith('bootRun') }.configureEach {
		doFirst {
			args = ["--spring.profiles.active=${project.properties['profile'] ?: 'prod'}"]
		}
}

